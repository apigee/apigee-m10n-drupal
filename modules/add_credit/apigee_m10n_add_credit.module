<?php

/**
 * @file
 * Copyright 2018 Google Inc.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License version 2 as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

use Drupal\commerce_product\Entity\ProductVariationInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_mail().
 */
function apigee_m10n_add_credit_mail($key, &$message, $params) {
  apigee_m10n_add_credit_service()->mail($key, $message, $params);
}

/**
 * Implements hook_ENTITY_TYPE_create().
 */
function apigee_m10n_add_credit_commerce_order_item_create(EntityInterface $entity) {
  apigee_m10n_add_credit_service()->commerceOrderItemCreate($entity);
}

/**
 * Implements hook_entity_base_field_info().
 */
function apigee_m10n_add_credit_entity_base_field_info(EntityTypeInterface $entity_type) {
  return apigee_m10n_add_credit_service()->entityBaseFieldInfo($entity_type);
}

/**
 * Implements hook_entity_bundle_field_info().
 */
function apigee_m10n_add_credit_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {
  return apigee_m10n_add_credit_service()->entityBundleFieldInfo($entity_type, $bundle, $base_field_definitions);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function apigee_m10n_add_credit_form_commerce_product_type_add_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  apigee_m10n_add_credit_service()->formCommerceProductTypeEditFormAlter($form, $form_state, $form_id);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function apigee_m10n_add_credit_form_commerce_product_type_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  apigee_m10n_add_credit_service()->formCommerceProductTypeEditFormAlter($form, $form_state, $form_id);
}

/**
 * Implements hook_inline_entity_form_table_fields_alter().
 */
function apigee_m10n_add_credit_inline_entity_form_table_fields_alter(&$fields, $context) {
  // TODO: Move this to AddCreditService.
  if ($context['entity_type'] == 'commerce_product_variation') {
    if (isset($fields['price'])) {
      $fields['price']['type'] = 'callback';
      $fields['price']['callback'] = 'apigee_m10n_add_credit_inline_entity_form_table_fields_price';
    }
  }
}

/**
 * Callback for the price inline table field.
 *
 * @param \Drupal\commerce_product\Entity\ProductVariationInterface $variation
 *   The commerce variation entity.
 * @param array $variables
 *   The variables array.
 *
 * @return \Drupal\commerce_price\Price|null
 *   Renderable array of price.
 */
function apigee_m10n_add_credit_inline_entity_form_table_fields_price(ProductVariationInterface $variation, array $variables) {
  $formatter = \Drupal::service('commerce_price.currency_formatter');

  // If product variation has a price range return the default.
  if (($variation->hasField('apigee_price_range'))
    && ($price_range = $variation->get('apigee_price_range'))
    && (isset($price_range->default))
    && (isset($price_range->currency_code))
  ) {
    return $formatter->format($price_range->default, $price_range->currency_code);
  }

  // Fallback to the default price.
  $price = $variation->getPrice();
  return $formatter->format($price->getNumber(), $price->getCurrencyCode());
}

/**
 * Implements hook_entity_type_alter().
 */
function apigee_m10n_add_credit_entity_type_alter(array &$entity_types) {
  apigee_m10n_add_credit_service()->entityTypeAlter($entity_types);
}

/**
 * Helper to get the `apigee_m10n.add_credit` service.
 *
 * @return \Drupal\apigee_m10n_add_credit\AddCreditServiceInterface
 *   The `apigee_m10n.add_credit` service.
 */
function apigee_m10n_add_credit_service() {
  // Use static caching for performance.
  static $service;
  $service = $service ?: \Drupal::service('apigee_m10n.add_credit');

  return $service;
}
