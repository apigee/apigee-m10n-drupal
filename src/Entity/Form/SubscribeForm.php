<?php/* * Copyright 2018 Google Inc. * * This program is free software; you can redistribute it and/or modify it under * the terms of the GNU General Public License version 2 as published by the * Free Software Foundation. * * This program is distributed in the hope that it will be useful, but WITHOUT * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public * License for more details. * * You should have received a copy of the GNU General Public License along * with this program; if not, write to the Free Software Foundation, Inc., 51 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. */namespace Drupal\apigee_m10n\Entity\Form;use Drupal\Core\Entity\EntityForm;use Drupal\Core\Entity\EntityInterface;use Drupal\Core\Form\FormStateInterface;use Drupal\Core\Routing\RouteMatchInterface;use Drupal\user\Entity\User;/** * Unsubscribe entity form for subscriptions. */class SubscribeForm extends EntityForm {  protected $rate_plan;  protected $package;  protected $user;  /**   * {@inheritdoc}   */  public function buildForm(array $form, FormStateInterface $form_state) {    $form = parent::buildForm($form, $form_state);    // @TODO: add `End This Plan` option when current subscription is already active.    // @TODO: Show plan details, including package information.    $form['startDate'] = [      '#type'  => 'date',      '#title' => $this->t('Start Date'),    ];    $form['actions']['submit']['#value'] = $this->t('Purchase This Plan');    return $form;  }  /**   * Provides a generic title callback for a single entity.   *   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match   *   The route match.   * @param \Drupal\Core\Entity\EntityInterface $_entity   *   (optional) An entity, passed in directly from the request attributes.   *   * @return string|null   *   The title for the entity view page, if an entity was found.   *   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException   */  public function title(RouteMatchInterface $route_match, EntityInterface $_entity = NULL) {    // Get the rate plan.    $this->rate_plan = $route_match->getParameter('rate_plan');    // Get the package ID.    $this->user = User::load($route_match->getParameter('user'));    $this->package_id = $route_match->getParameter('package');    $r = 'v';    return $this->t("Subscribe to %label", ['%label' => $this->rate_plan->label()]);  }  /**   * {@inheritdoc}   */  public function save(array $form, FormStateInterface $form_state) {    $values = $form_state->getValues();    $v = 'test';    $this->entity->developerId = $this->user->getEmail();    $this->entity->set('package', $this->package_id);    return parent::save($form, $form_state);  }  /**   * {@inheritdoc}   */  public function submitForm(array &$form, FormStateInterface $form_state) {    // Remove button and internal Form API values from submitted values.    $form_state->cleanValues();    $this->entity = $this->buildEntity($form, $form_state);  }  /**   * {@inheritdoc}   */  public function buildEntity(array $form, FormStateInterface $form_state) {    $entity = clone $this->entity;    $this->entity->set('ratePlan', $this->rate_plan);    return $entity;  }}